select:				/*  select 语句的语法解析树*/

    SELECT select_attr select_list FROM ID rel_list where SEMICOLON
		{
			// CONTEXT->ssql->sstr.selection.relations[CONTEXT->from_length++]=$4;
			selects_append_relation(&CONTEXT->ssql->sstr.selection, $5);
        
			selects_append_conditions(&CONTEXT->ssql->sstr.selection, CONTEXT->conditions, CONTEXT->condition_length);

			CONTEXT->ssql->flag=SCF_SELECT;//"select";
			// CONTEXT->ssql->sstr.selection.attr_num = CONTEXT->select_length;

			//临时变量清零
			CONTEXT->condition_length=0;
			CONTEXT->from_length=0;
			CONTEXT->select_length=0;
			CONTEXT->value_length = 0;
        }
	;
select_attr:
    MAX LBRACE ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, NULL, $3, "MAX");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | MAX LBRACE ID DOT ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, $3, $5, "MAX");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | MIN LBRACE ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, NULL, $3, "MIN");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | MIN LBRACE ID DOT ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, $3, $5, "MIN");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | COUNT LBRACE ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, NULL, $3, "COUNT");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | COUNT LBRACE ID DOT ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, $3, $5, "COUNT");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | COUNT LBRACE STAR RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, NULL, "__trx", "COUNT");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | AVG LBRACE ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, NULL, $3, "AVG");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | AVG LBRACE ID DOT ID RBRACE {
        RelAttr attr;
        relation_attr_init_extra(&attr, $3, $5, "AVG");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
        }
    | STAR {  
			RelAttr attr;
			relation_attr_init_extra(&attr, NULL, "*", "IDEO");
			selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
		}
    |ID{
        RelAttr attr;
        relation_attr_init_extra(&attr, NULL, $1, "IDEO");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
    }
    |ID DOT ID{
        RelAttr attr;
        relation_attr_init_extra(&attr, $1, $3, "IDEO");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
    }
    |ID DOT STAR{
        RelAttr attr;
        relation_attr_init_extra(&attr, $1, "*", "IDEO");
        selects_append_attribute(&CONTEXT->ssql->sstr.selection, &attr);
    }
    ;
select_list:  
    | COMMA select_attr select_list {
    
        }
    ;
    
		|value comOp value 
		{
			Value *left_value = &CONTEXT->values[CONTEXT->value_length - 2];
			Value *right_value = &CONTEXT->values[CONTEXT->value_length - 1];

			Condition condition;
			condition_init(&condition, CONTEXT->comp, 0, NULL, left_value, 0, NULL, right_value);
			CONTEXT->conditions[CONTEXT->condition_length++] = condition;
			// $$ = ( Condition *)malloc(sizeof( Condition));
			// $$->left_is_attr = 0;
			// $$->left_attr.relation_name=NULL;
			// $$->left_attr.attribute_name=NULL;
			// $$->left_value = *$1;
			// $$->comp = CONTEXT->comp;
			// $$->right_is_attr = 0;
			// $$->right_attr.relation_name = NULL;
			// $$->right_attr.attribute_name = NULL;
			// $$->right_value = *$3;

		}
		|ID comOp ID 
		{
			RelAttr left_attr;
			relation_attr_init(&left_attr, NULL, $1);
			RelAttr right_attr;
			relation_attr_init(&right_attr, NULL, $3);

			Condition condition;
			condition_init(&condition, CONTEXT->comp, 1, &left_attr, NULL, 1, &right_attr, NULL);
			CONTEXT->conditions[CONTEXT->condition_length++] = condition;
			// $$=( Condition *)malloc(sizeof( Condition));
			// $$->left_is_attr = 1;
			// $$->left_attr.relation_name=NULL;
			// $$->left_attr.attribute_name=$1;
			// $$->comp = CONTEXT->comp;
			// $$->right_is_attr = 1;
			// $$->right_attr.relation_name=NULL;
			// $$->right_attr.attribute_name=$3;

		}
    |value comOp ID
		{
			Value *left_value = &CONTEXT->values[CONTEXT->value_length - 1];
			RelAttr right_attr;
			relation_attr_init(&right_attr, NULL, $3);

			Condition condition;
			condition_init(&condition, CONTEXT->comp, 0, NULL, left_value, 1, &right_attr, NULL);
			CONTEXT->conditions[CONTEXT->condition_length++] = condition;

			// $$=( Condition *)malloc(sizeof( Condition));
			// $$->left_is_attr = 0;
			// $$->left_attr.relation_name=NULL;
			// $$->left_attr.attribute_name=NULL;
			// $$->left_value = *$1;
			// $$->comp=CONTEXT->comp;
			
			// $$->right_is_attr = 1;
			// $$->right_attr.relation_name=NULL;
			// $$->right_attr.attribute_name=$3;
		
		}
    |ID DOT ID comOp value
		{
			RelAttr left_attr;
			relation_attr_init(&left_attr, $1, $3);
			Value *right_value = &CONTEXT->values[CONTEXT->value_length - 1];

			Condition condition;
			condition_init(&condition, CONTEXT->comp, 1, &left_attr, NULL, 0, NULL, right_value);
			CONTEXT->conditions[CONTEXT->condition_length++] = condition;

			// $$=( Condition *)malloc(sizeof( Condition));
			// $$->left_is_attr = 1;
			// $$->left_attr.relation_name=$1;
			// $$->left_attr.attribute_name=$3;
			// $$->comp=CONTEXT->comp;
			// $$->right_is_attr = 0;   //属性值
			// $$->right_attr.relation_name=NULL;
			// $$->right_attr.attribute_name=NULL;
			// $$->right_value =*$5;			
							
    }
    |value comOp ID DOT ID
		{
			Value *left_value = &CONTEXT->values[CONTEXT->value_length - 1];

			RelAttr right_attr;
			relation_attr_init(&right_attr, $3, $5);

			Condition condition;
			condition_init(&condition, CONTEXT->comp, 0, NULL, left_value, 1, &right_attr, NULL);
			CONTEXT->conditions[CONTEXT->condition_length++] = condition;
			// $$=( Condition *)malloc(sizeof( Condition));
			// $$->left_is_attr = 0;//属性值
			// $$->left_attr.relation_name=NULL;
			// $$->left_attr.attribute_name=NULL;
			// $$->left_value = *$1;
			// $$->comp =CONTEXT->comp;
			// $$->right_is_attr = 1;//属性
			// $$->right_attr.relation_name = $3;
			// $$->right_attr.attribute_name = $5;
									
    }
    |ID DOT ID comOp ID DOT ID
		{
			RelAttr left_attr;
			relation_attr_init(&left_attr, $1, $3);
			RelAttr right_attr;
			relation_attr_init(&right_attr, $5, $7);

			Condition condition;
			condition_init(&condition, CONTEXT->comp, 1, &left_attr, NULL, 1, &right_attr, NULL);
			CONTEXT->conditions[CONTEXT->condition_length++] = condition;
			// $$=( Condition *)malloc(sizeof( Condition));
			// $$->left_is_attr = 1;		//属性
			// $$->left_attr.relation_name=$1;
			// $$->left_attr.attribute_name=$3;
			// $$->comp =CONTEXT->comp;
			// $$->right_is_attr = 1;		//属性
			// $$->right_attr.relation_name=$5;
			// $$->right_attr.attribute_name=$7;
    }
